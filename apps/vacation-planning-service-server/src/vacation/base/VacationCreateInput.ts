/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingCreateNestedManyWithoutVacationsInput } from "./BookingCreateNestedManyWithoutVacationsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { DestinationCreateNestedManyWithoutVacationsInput } from "./DestinationCreateNestedManyWithoutVacationsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class VacationCreateInput {
  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutVacationsInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutVacationsInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutVacationsInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutVacationsInput;

  @ApiProperty({
    required: false,
    type: () => DestinationCreateNestedManyWithoutVacationsInput,
  })
  @ValidateNested()
  @Type(() => DestinationCreateNestedManyWithoutVacationsInput)
  @IsOptional()
  @Field(() => DestinationCreateNestedManyWithoutVacationsInput, {
    nullable: true,
  })
  destinations?: DestinationCreateNestedManyWithoutVacationsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { VacationCreateInput as VacationCreateInput };
